dnl	This file is an input file used by the GNU "autoconf" program to
dnl	generate the file "configure", which is run to configure the 
dnl	Makefile in this directory.

# Version: $Id: configure.in,v 1.3 2007/03/08 05:05:15 cxh Exp $
# Copyright (c) 2007 The Regents of the University of California.
# All rights reserved.
#
# Permission is hereby granted, without written agreement and without
# license or royalty fees, to use, copy, modify, and distribute this
# software and its documentation for any purpose, provided that the
# above copyright notice and the following two paragraphs appear in all
# copies of this software and that appropriate acknowledgments are made
# to the research of the Metropolis group.
# 
# IN NO EVENT SHALL THE UNIVERSITY OF CALIFORNIA BE LIABLE TO ANY PARTY
# FOR DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES
# ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN IF
# THE UNIVERSITY OF CALIFORNIA HAS BEEN ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
#
# THE UNIVERSITY OF CALIFORNIA SPECIFICALLY DISCLAIMS ANY WARRANTIES,
# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE SOFTWARE
# PROVIDED HEREUNDER IS ON AN "AS IS" BASIS, AND THE UNIVERSITY OF
# CALIFORNIA HAS NO OBLIGATION TO PROVIDE MAINTENANCE, SUPPORT, UPDATES,
# ENHANCEMENTS, OR MODIFICATIONS.
#
# 						PT_COPYRIGHT_VERSION_2
# 						COPYRIGHTENDKEY

# configure is derived from configure.in by running GNU autoconf
# on configure.in. 

# To modify configure:
# 1. Edit configure.in
# 2. Run: cd $METROII; rm config.*; autoconf; ./configure
# 3. When you are satisfied with your changes, check in configure.in:
#       cvs commit -m "Added xxx package" configure.in
# 4. Since configure.in will have a more recent modification time than
#    configure, be sure to run autoconf again
# 5. Check in configure:
#       cvs commit -m "configure.in changed" configure

# NOTE: sometimes the order that the files are updated when cvs update
# is run can cause configure.in to have a more recent mod time than
# configure.  If this is the case, try editing configure and adding
# a space to a comment line and commiting the change.

AC_INIT(mk/metroII.mk.in)

METRO_DEFAULT=$METROII

# The default value of prefix
AC_PREFIX_DEFAULT($METROII)


#--------------------------------------------------------------------
#	The METROII directory as a URL
#--------------------------------------------------------------------

# Read the METROII variable and substitute forward slashes
# for backward slashes

case "`uname -s`" in
CYGWIN_ME-*)
	# Windows ME is not a real os, and it does not have CMD.
	# So, we punt
	METROII_DIR=$METROII
	;;
CYGWIN_98-*) 
	# Windows 98 is not a real os, and it does not have CMD.
	# So, we punt
	METROII_DIR=$METROII
	;;
CYGWIN*)
	# We use cmd /c chdir here to get rid of /cygwin/c
	METROII_DIR=`(cd "$METROII"; cmd /c chdir) | tr -d '\r' | sed 's@\\\@/@g'`
	;;
*)
	METROII_DIR=$METROII
	;;
esac

# Look for various tools.  We determine what tools to use at configure-time
# so that if the user later adjusts their path, the tools that were
# used at configure-time will still be used until the user re-runs configure.


# Make sure that we check for CXX before cding in to config
AC_PROG_CXX
METROII_CXX=$CXX

AC_PATH_PROG(METROII_CC, gcc)
if test "${METROII_CC:-none}" = "none"; then
    AC_MSG_WARN([Failed to find gcc])
    AC_PATH_PROG(METROII_CC, cc)
    if test "${METROII_CC:-none}" != "none"; then
        AC_MSG_RESULT([$METROII_CC])
    else    
        AC_MSG_WARN([Failed to find gcc or cc!])
    fi
fi

# Look for make
AC_PATH_PROG(METROII_MAKE, make)
if test "${METROII_MAKE:-none}" = "none"; then
    AC_MSG_WARN([Failed to find make])
    AC_PATH_PROG(METROII_MAKE, gmake)
    if test "${METROII_MAKE:-none}" = "none"; then
        AC_MSG_ERROR([Could not find make or gmake.  You can download
    GNU make from http://www.gnu.org/software/make/
    Solaris users, make sure /usr/ccs/bin is in your path.])
    fi
fi

#####################################################################
#####################################################################
#       Below here we look for various packages.
#       Not all Metropolis software products need all packages, so
#       we usually look for a directory that uses the package first
#
#       Please try to keep the packages vaguely alphabetical
#####################################################################
#####################################################################

#####################################################################
#####################################################################
#       Below here we look for various packages.
#       Not all Metropolis software products need all packages, so
#       we usually look for a directory that uses the package first
#
#       Please try to keep the packages vaguely alphabetical
#####################################################################
#####################################################################

#--------------------------------------------------------------------
#       SDL: Simple Directmedia Layer: http://www.libsdl.org
#       
#--------------------------------------------------------------------
# We only need to look for SystemC if this directory is present
METROII_SDL_USER_DIR="examples/h.264-decoder"

METROII_SDL_FOUND=no

# Set to h.265-decoder and used in example/makefile if SDL is found.
METROII_H264_DIR= 

if test ! -d "$METROII_SDL_USER_DIR"; then
    AC_MSG_RESULT([$METROII_SDL_USER_DIR is not present,
	so we need not find SDL.])
else
    AC_MSG_CHECKING([for Simple Directmedia Layer (SDL)])

    AC_ARG_WITH(METROII_SDL, [  --with-sdl=DIR       use SDL from DIR,
                          defaults to /usr/local/sdl],
	METROII_SDL=$withval,
	METROII_SDL=/usr/local/systemc-2.1)

    if test -d "$METROII_SDL"; then
	AC_MSG_RESULT([$METROII_SDL])
	METROII_SDL_FOUND=yes
	METROII_H264_DIR=h.264-decoder
    else
	AC_MSG_RESULT([not found, still looking])
        dirs="$HOME/src/SDL
   	    $HOME/src/SDL-1.2.11
	    /usr/share/SDL
	    /usr/share/SDL-1.2.11
            /usr/local/SDL
            /usr/local/SDL-1.2.11"
	for dir in $dirs
	do
            AC_MSG_CHECKING([for SDL in $dir])
  	    if test -f "$dir/include/SDL/SDL.h"; then
		AC_MSG_RESULT([ok])
		METROII_SDL_FOUND=yes
		METROII_SDL=$dir
		METROII_H264_DIR=h.264-decoder

		break
	    else
		AC_MSG_RESULT([not found, keep looking])
	    fi    
	done
    fi

    if test "$METROII_SDL" = "no"; then
        AC_MSG_WARN([Failed to find Simple Directmedia Layer, which means
   that the h.264 example in $METROII_SDL_USER_DIR will not be compiled
   To compile this example, please install
   SDL from http://www.libsdl.org and rerun 
   configure --with-sdl=/where/systemc/is/located])
    fi
fi

#--------------------------------------------------------------------
#       SystemC
#       
#--------------------------------------------------------------------
# We only need to look for SystemC if this directory is present
METROII_SYSTEMC_USER_DIR="src"

METROII_SYSTEMC=no
if test ! -d "$METROII_SYSTEMC_USER_DIR"; then
    AC_MSG_RESULT([$METROII_SYSTEMC_USER_DIR is not present,
	so we need not find SystemC.])
else
    AC_MSG_CHECKING([for SystemC directory])

    AC_ARG_WITH(systemc, [  --with-systemc=DIR       use SystemC from DIR,
                          defaults to /usr/local/systemc-2.1],
	SYSTEMC=$withval,
	SYSTEMC=/usr/local/systemc-2.1)

    if test -d "$SYSTEMC"; then
	AC_MSG_RESULT([$SYSTEMC])
        METROII_SYSTEMC=yes
    else
	AC_MSG_RESULT([not found, still looking])
    fi

    if test "$METROII_SYSTEMC" = "no"; then
        dirs="$HOME/src/systemc-2.2
	     $HOME/src/systemc-2.2.05jun06_beta
	    /usr/share/systemc-2.2
	    /usr/share/systemc-2.2.05jun06_beta
            /usr/local/systemc-2.2
            /usr/local/systemc-2.2.05jun06_beta"
	for dir in $dirs
	do
            AC_MSG_CHECKING([for SystemC in $dir])
  	    if test -f "$dir/include/systemc.h"; then
		AC_MSG_RESULT([ok])
		SYSTEMC=$dir
		METROII_SYSTEMC=yes
		break
	    else
		AC_MSG_RESULT([not found, keep looking])
	    fi    
	done
    fi

    if test "$METROII_SYSTEMC" = "no"; then
        AC_MSG_WARN([Failed to find SystemC directory, please install
   SystemC from http://www.systemc.org or rerun 
   configure --with-systemc=/where/systemc/is/located])
        AC_MSG_CHECKING([for systemc.h])
        AC_CHECK_HEADERS(systemc.h, METROII_SYSTEMC=yes, METROII_SYSTEMC=no)
    fi

    if test ! -d "$SYSTEMC"; then
        AC_MSG_WARN([Failed to find SystemC directory
    $SYSTEMC])
    fi


    case "`uname -s`" in
	Linux) SYSTEMC_LIB=lib-linux;;
	SunOS) SYSTEMC_LIB=lib-gccsparcOS5;;
	CYGWIN*) SYSTEMC_LIB=lib-cygwin;;
        *) SYSTEMC_LIB=lib;;
    esac

    AC_MSG_CHECKING([for SystemC library directory])
    AC_ARG_WITH(systemc-lib, [  --with-systemc-lib=DIR       use SystemC libs from DIR,
                          defaults to "lib", another choice is "lib-linux"],
	SYSTEMC_LIB=$withval,
	SYSTEMC_LIB=$SYSTEMC_LIB)


    if test -d "${SYSTEMC}/${SYSTEMC_LIB}"; then
        AC_MSG_RESULT([$SYSTEMC_LIB])	
    else
	if test -d "$SYSTEMC"; then
	    OLD_SYSTEMC_LIB=$SYSTEMC_LIB
	    SYSTEMC_LIB=`cd ${SYSTEMC}; ls -d lib-* | head -1`
	    if test -d "${SYSTEMC_LIB}"; then
	        AC_MSG_RESULT([$SYSTEMC_LIB])
	    else 
		AC_MSG_WARN([Failed to find SystemC library directory,
    $SYSTEMC/$OLD_SYSTEMC_LIB did not exist.])
            fi
        fi
    fi
fi    

# We need two .classpath files one at
#  $METROII/src/.classpath for Eclipse users that are not using cvs
#  $METROII/.classpath for Eclipse users that are using cvs
# So, we do some substitution to create a variable that contains the
# directories to be excluded for use in $METROII/.classpath
ECLIPSE_EXCLUDING=`echo $ECLIPSE_EXCLUDING_SRC | sed 's@|metropolis@|src/metropolis@g'`


#####################################################################
#####################################################################
#
#       Substitutions that configure performs
#
#       Keep these substitutions alphabetical, with a description

# Location of the the METROII directory
AC_SUBST(METROII)

# Set to gcc if gcc was found
AC_SUBST(METROII_CC)

# C++ compiler, such as g++
AC_SUBST(METROII_CXX)

# Default location of Metropolis, chosen when configure was run, used
# in bin/metroinvoke.in
AC_SUBST(METROII_DEFAULT)

# Set to h.264-decoder and used in example/makefile if SDL is found.
AC_SUBST(METROII_H264_DIR)

# Location of the Simple Directmedia Layer (SDL), used by the h.264 example
AC_SUBST(METROII_SDL)

# Location of the SystemC directory
AC_SUBST(SYSTEMC)

# Location of the SystemC libraries
AC_SUBST(SYSTEMC_LIB)

# Files we substitute in 
AC_OUTPUT(mk/metroII.mk)
